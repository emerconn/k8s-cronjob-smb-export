name: Docker Image

on:
  push:
    branches: ['**']
    tags: ['v*.*.*']
    paths:
      - Dockerfile
      - .dockerignore
      - entrypoint.sh
      - .github/workflows/docker-image.yml
  pull_request:
    types: [opened, reopened]
    branches: [main]
    paths:
      - Dockerfile
      - .dockerignore
      - entrypoint.sh
      - .github/workflows/docker-image.yml
  release:
    types: [published]

jobs:
  docker-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    environment:
      name: docker
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Collect Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: latest=false
          images: |
            ${{ github.repository_owner }}/${{ github.event.repository.name }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and publish Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: |
            linux/amd64
            linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=min

  trivy:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    environment:
      name: trivy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
